struct OpInfo {
  const char* name;
  int op_type;
  int opcode;
  int type;
  int type2;
  int access;
};
%%
assert_eq, WASM_OP_ASSERT_EQ
assert_invalid, WASM_OP_ASSERT_INVALID
block, WASM_OP_BLOCK, WASM_OPCODE_BLOCK
break, WASM_OP_BREAK, WASM_OPCODE_BREAK
call_import, WASM_OP_CALL_IMPORT, WASM_OPCODE_CALL
call_indirect, WASM_OP_CALL_INDIRECT, WASM_OPCODE_CALL_INDIRECT
call, WASM_OP_CALL, WASM_OPCODE_CALL
destruct, WASM_OP_DESTRUCT, WASM_OPCODE_INVALID
export, WASM_OP_EXPORT
f32.abs, WASM_OP_UNARY, WASM_OPCODE_F32_ABS, WASM_TYPE_F32
f32.add, WASM_OP_BINARY, WASM_OPCODE_F32_ADD, WASM_TYPE_F32
f32.ceil, WASM_OP_UNARY, WASM_OPCODE_F32_CEIL, WASM_TYPE_F32
f32.const, WASM_OP_CONST, WASM_OPCODE_F32_CONST, WASM_TYPE_F32
f32.convert_s/i32, WASM_OP_CONVERT, WASM_OPCODE_F32_SCONVERT_I32, WASM_TYPE_F32, WASM_TYPE_I32
f32.convert_s/i64, WASM_OP_CONVERT, WASM_OPCODE_F32_SCONVERT_I64, WASM_TYPE_F32, WASM_TYPE_I64
f32.convert_u/i32, WASM_OP_CONVERT, WASM_OPCODE_F32_UCONVERT_I32, WASM_TYPE_F32, WASM_TYPE_I32
f32.convert_u/i64, WASM_OP_CONVERT, WASM_OPCODE_F32_UCONVERT_I64, WASM_TYPE_F32, WASM_TYPE_I64
f32.copysign, WASM_OP_BINARY, WASM_OPCODE_F32_COPYSIGN, WASM_TYPE_F32
f32.demote/f64, WASM_OP_CONVERT, WASM_OPCODE_F32_CONVERT_F64, WASM_TYPE_F32, WASM_TYPE_F64
f32.div, WASM_OP_BINARY, WASM_OPCODE_F32_DIV, WASM_TYPE_F32
f32.eq, WASM_OP_COMPARE, WASM_OPCODE_F32_EQ, WASM_TYPE_F32
f32.floor, WASM_OP_UNARY, WASM_OPCODE_F32_FLOOR, WASM_TYPE_F32
f32.ge, WASM_OP_COMPARE, WASM_OPCODE_F32_GE, WASM_TYPE_F32
f32.gt, WASM_OP_COMPARE, WASM_OPCODE_F32_GT, WASM_TYPE_F32
f32.le, WASM_OP_COMPARE, WASM_OPCODE_F32_LE, WASM_TYPE_F32
f32.load, WASM_OP_LOAD, WASM_OPCODE_F32_LOAD_I32, WASM_TYPE_F32, WASM_MEM_TYPE_F32, 0
f32.lt, WASM_OP_COMPARE, WASM_OPCODE_F32_LT, WASM_TYPE_F32
f32.max, WASM_OP_BINARY, WASM_OPCODE_F32_MAX, WASM_TYPE_F32
f32.min, WASM_OP_BINARY, WASM_OPCODE_F32_MIN, WASM_TYPE_F32
f32.mul, WASM_OP_BINARY, WASM_OPCODE_F32_MUL, WASM_TYPE_F32
f32.nearest, WASM_OP_UNARY, WASM_OPCODE_F32_NEAREST, WASM_TYPE_F32
f32.neg, WASM_OP_UNARY, WASM_OPCODE_F32_NEG, WASM_TYPE_F32
f32.neq, WASM_OP_COMPARE, WASM_OPCODE_F32_NE, WASM_TYPE_F32
f32.reinterpret/i32, WASM_OP_CONVERT, WASM_OPCODE_F32_REINTERPRET_I32, WASM_TYPE_F32, WASM_TYPE_I32
f32.sqrt, WASM_OP_UNARY, WASM_OPCODE_F32_SQRT, WASM_TYPE_F32
f32.store, WASM_OP_STORE, WASM_OPCODE_F32_STORE_I32, WASM_TYPE_F32, WASM_MEM_TYPE_F32, 0
f32.sub, WASM_OP_BINARY, WASM_OPCODE_F32_SUB, WASM_TYPE_F32
f32.switch, WASM_OP_SWITCH, WASM_OPCODE_INVALID, WASM_TYPE_F32
f32.trunc, WASM_OP_UNARY, WASM_OPCODE_F32_TRUNC, WASM_TYPE_F32
f64.abs, WASM_OP_UNARY, WASM_OPCODE_F64_ABS, WASM_TYPE_F64
f64.add, WASM_OP_BINARY, WASM_OPCODE_F64_ADD, WASM_TYPE_F64
f64.ceil, WASM_OP_UNARY, WASM_OPCODE_F64_CEIL, WASM_TYPE_F64
f64.const, WASM_OP_CONST, WASM_OPCODE_F64_CONST, WASM_TYPE_F64
f64.convert_s/i32, WASM_OP_CONVERT, WASM_OPCODE_F64_SCONVERT_I32, WASM_TYPE_F64, WASM_TYPE_I32
f64.convert_s/i64, WASM_OP_CONVERT, WASM_OPCODE_F64_SCONVERT_I64, WASM_TYPE_F64, WASM_TYPE_I64
f64.convert_u/i32, WASM_OP_CONVERT, WASM_OPCODE_F64_UCONVERT_I32, WASM_TYPE_F64, WASM_TYPE_I32
f64.convert_u/i64, WASM_OP_CONVERT, WASM_OPCODE_F64_UCONVERT_I64, WASM_TYPE_F64, WASM_TYPE_I64
f64.copysign, WASM_OP_BINARY, WASM_OPCODE_F64_COPYSIGN, WASM_TYPE_F64
f64.div, WASM_OP_BINARY, WASM_OPCODE_F64_DIV, WASM_TYPE_F64
f64.eq, WASM_OP_COMPARE, WASM_OPCODE_F64_EQ, WASM_TYPE_F64
f64.floor, WASM_OP_UNARY, WASM_OPCODE_F64_FLOOR, WASM_TYPE_F64
f64.ge, WASM_OP_COMPARE, WASM_OPCODE_F64_GE, WASM_TYPE_F64
f64.gt, WASM_OP_COMPARE, WASM_OPCODE_F64_GT, WASM_TYPE_F64
f64.le, WASM_OP_COMPARE, WASM_OPCODE_F64_LE, WASM_TYPE_F64
f64.load, WASM_OP_LOAD, WASM_OPCODE_F64_LOAD_I32, WASM_TYPE_F64, WASM_MEM_TYPE_F64, 0
f64.lt, WASM_OP_COMPARE, WASM_OPCODE_F64_LT, WASM_TYPE_F64
f64.max, WASM_OP_BINARY, WASM_OPCODE_F64_MAX, WASM_TYPE_F64
f64.min, WASM_OP_BINARY, WASM_OPCODE_F64_MIN, WASM_TYPE_F64
f64.mul, WASM_OP_BINARY, WASM_OPCODE_F64_MUL, WASM_TYPE_F64
f64.nearest, WASM_OP_UNARY, WASM_OPCODE_F64_NEAREST, WASM_TYPE_F64
f64.neg, WASM_OP_UNARY, WASM_OPCODE_F64_NEG, WASM_TYPE_F64
f64.neq, WASM_OP_COMPARE, WASM_OPCODE_F64_NE, WASM_TYPE_F64
f64.promote/f32, WASM_OP_CONVERT, WASM_OPCODE_F64_CONVERT_F32, WASM_TYPE_F64, WASM_TYPE_F32
f64.reinterpret/i64, WASM_OP_CONVERT, WASM_OPCODE_F64_REINTERPRET_I64, WASM_TYPE_F64, WASM_TYPE_I64
f64.sqrt, WASM_OP_UNARY, WASM_OPCODE_F64_SQRT, WASM_TYPE_F64
f64.store, WASM_OP_STORE, WASM_OPCODE_F64_STORE_I32, WASM_TYPE_F64, WASM_MEM_TYPE_F64, 0
f64.sub, WASM_OP_BINARY, WASM_OPCODE_F64_SUB, WASM_TYPE_F64
f64.switch, WASM_OP_SWITCH, WASM_OPCODE_INVALID, WASM_TYPE_F64
f64.trunc, WASM_OP_UNARY, WASM_OPCODE_F64_TRUNC, WASM_TYPE_F64
func, WASM_OP_FUNC
get_local, WASM_OP_GET_LOCAL, WASM_OPCODE_GET_LOCAL
global, WASM_OP_GLOBAL
i32.add, WASM_OP_BINARY, WASM_OPCODE_I32_ADD, WASM_TYPE_I32
i32.and, WASM_OP_BINARY, WASM_OPCODE_I32_AND, WASM_TYPE_I32
i32.clz, WASM_OP_UNARY, WASM_OPCODE_I32_CLZ, WASM_TYPE_I32
i32.const, WASM_OP_CONST, WASM_OPCODE_I32_CONST, WASM_TYPE_I32
i32.ctz, WASM_OP_UNARY, WASM_OPCODE_I32_CTZ, WASM_TYPE_I32
i32.div_s, WASM_OP_BINARY, WASM_OPCODE_I32_SDIV, WASM_TYPE_I32
i32.div_u, WASM_OP_BINARY, WASM_OPCODE_I32_UDIV, WASM_TYPE_I32
i32.eq, WASM_OP_COMPARE, WASM_OPCODE_I32_EQ, WASM_TYPE_I32
i32.ge_s, WASM_OP_COMPARE, WASM_OPCODE_I32_SGE, WASM_TYPE_I32
i32.ge_u, WASM_OP_COMPARE, WASM_OPCODE_I32_UGE, WASM_TYPE_I32
i32.gt_s, WASM_OP_COMPARE, WASM_OPCODE_I32_SGT, WASM_TYPE_I32
i32.gt_u, WASM_OP_COMPARE, WASM_OPCODE_I32_UGT, WASM_TYPE_I32
i32.le_s, WASM_OP_COMPARE, WASM_OPCODE_I32_SLE, WASM_TYPE_I32
i32.le_u, WASM_OP_COMPARE, WASM_OPCODE_I32_ULE, WASM_TYPE_I32
i32.load16_s, WASM_OP_LOAD, WASM_OPCODE_I32_LOAD_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I16, 5
i32.load16_u, WASM_OP_LOAD, WASM_OPCODE_I32_LOAD_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I16, 1
i32.load8_s, WASM_OP_LOAD, WASM_OPCODE_I32_LOAD_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I8, 4
i32.load8_u, WASM_OP_LOAD, WASM_OPCODE_I32_LOAD_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I8, 0
i32.load, WASM_OP_LOAD, WASM_OPCODE_I32_LOAD_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I32, 6
i32.lt_s, WASM_OP_COMPARE, WASM_OPCODE_I32_SLT, WASM_TYPE_I32
i32.lt_u, WASM_OP_COMPARE, WASM_OPCODE_I32_ULT, WASM_TYPE_I32
i32.mul, WASM_OP_BINARY, WASM_OPCODE_I32_MUL, WASM_TYPE_I32
i32.neq, WASM_OP_COMPARE, WASM_OPCODE_I32_NE, WASM_TYPE_I32
i32.not, WASM_OP_UNARY, WASM_OPCODE_I32_NOT, WASM_TYPE_I32
i32.or, WASM_OP_BINARY, WASM_OPCODE_I32_OR, WASM_TYPE_I32
i32.popcnt, WASM_OP_UNARY, WASM_OPCODE_I32_POPCNT, WASM_TYPE_I32
i32.reinterpret/f32, WASM_OP_CONVERT, WASM_OPCODE_INVALID, WASM_TYPE_I32
i32.rem_s, WASM_OP_BINARY, WASM_OPCODE_I32_SREM, WASM_TYPE_I32
i32.rem_u, WASM_OP_BINARY, WASM_OPCODE_I32_UREM, WASM_TYPE_I32
i32.shl, WASM_OP_BINARY, WASM_OPCODE_I32_SHL, WASM_TYPE_I32
i32.shr_s, WASM_OP_BINARY, WASM_OPCODE_I32_SAR, WASM_TYPE_I32
i32.shr_u, WASM_OP_BINARY, WASM_OPCODE_I32_SHR, WASM_TYPE_I32
i32.store16, WASM_OP_STORE, WASM_OPCODE_I32_STORE_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I16, 5
i32.store8, WASM_OP_STORE, WASM_OPCODE_I32_STORE_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I8, 4
i32.store, WASM_OP_STORE, WASM_OPCODE_I32_STORE_I32, WASM_TYPE_I32, WASM_MEM_TYPE_I32, 6
i32.sub, WASM_OP_BINARY, WASM_OPCODE_I32_SUB, WASM_TYPE_I32
i32.switch, WASM_OP_SWITCH, WASM_OPCODE_SWITCH, WASM_TYPE_I32
i32.trunc_s/f32, WASM_OP_CONVERT, WASM_OPCODE_I32_SCONVERT_F32, WASM_TYPE_I32, WASM_TYPE_F32
i32.trunc_s/f64, WASM_OP_CONVERT, WASM_OPCODE_I32_SCONVERT_F64, WASM_TYPE_I32, WASM_TYPE_F64
i32.trunc_u/f32, WASM_OP_CONVERT, WASM_OPCODE_I32_UCONVERT_F32, WASM_TYPE_I32, WASM_TYPE_F32
i32.trunc_u/f64, WASM_OP_CONVERT, WASM_OPCODE_I32_UCONVERT_F64, WASM_TYPE_I32, WASM_TYPE_F64
i32.wrap/i64, WASM_OP_CONVERT, WASM_OPCODE_I32_CONVERT_I64, WASM_TYPE_I32, WASM_TYPE_I64
i32.xor, WASM_OP_BINARY, WASM_OPCODE_I32_XOR, WASM_TYPE_I32
i64.add, WASM_OP_BINARY, WASM_OPCODE_I64_ADD, WASM_TYPE_I64
i64.and, WASM_OP_BINARY, WASM_OPCODE_I64_AND, WASM_TYPE_I64
i64.clz, WASM_OP_UNARY, WASM_OPCODE_I64_CLZ, WASM_TYPE_I64
i64.const, WASM_OP_CONST, WASM_OPCODE_I64_CONST, WASM_TYPE_I64
i64.ctz, WASM_OP_UNARY, WASM_OPCODE_I64_CTZ, WASM_TYPE_I64
i64.div_s, WASM_OP_BINARY, WASM_OPCODE_I64_SDIV, WASM_TYPE_I64
i64.div_u, WASM_OP_BINARY, WASM_OPCODE_I64_UDIV, WASM_TYPE_I64
i64.eq, WASM_OP_COMPARE, WASM_OPCODE_I64_EQ, WASM_TYPE_I64
i64.extend_s/i32, WASM_OP_CONVERT, WASM_OPCODE_I64_SCONVERT_I32, WASM_TYPE_I64, WASM_TYPE_I32
i64.extend_u/i32, WASM_OP_CONVERT, WASM_OPCODE_I64_UCONVERT_I32, WASM_TYPE_I64, WASM_TYPE_I32
i64.ge_s, WASM_OP_COMPARE, WASM_OPCODE_I64_SGE, WASM_TYPE_I64
i64.ge_u, WASM_OP_COMPARE, WASM_OPCODE_I64_UGE, WASM_TYPE_I64
i64.gt_s, WASM_OP_COMPARE, WASM_OPCODE_I64_SGT, WASM_TYPE_I64
i64.gt_u, WASM_OP_COMPARE, WASM_OPCODE_I64_UGT, WASM_TYPE_I64
i64.le_s, WASM_OP_COMPARE, WASM_OPCODE_I64_SLE, WASM_TYPE_I64
i64.le_u, WASM_OP_COMPARE, WASM_OPCODE_I64_ULE, WASM_TYPE_I64
i64.load, WASM_OP_LOAD, WASM_OPCODE_I64_LOAD_I32, WASM_TYPE_I64, WASM_MEM_TYPE_I64, 7
i64.lt_s, WASM_OP_COMPARE, WASM_OPCODE_I64_SLT, WASM_TYPE_I64
i64.lt_u, WASM_OP_COMPARE, WASM_OPCODE_I64_ULT, WASM_TYPE_I64
i64.mul, WASM_OP_BINARY, WASM_OPCODE_I64_MUL, WASM_TYPE_I64
i64.neq, WASM_OP_COMPARE, WASM_OPCODE_I64_NE, WASM_TYPE_I64
i64.or, WASM_OP_BINARY, WASM_OPCODE_I64_OR, WASM_TYPE_I64
i64.popcnt, WASM_OP_UNARY, WASM_OPCODE_I64_POPCNT, WASM_TYPE_I64
i64.reinterpret/f64, WASM_OP_CONVERT, WASM_OPCODE_INVALID, WASM_TYPE_I64
i64.rem_s, WASM_OP_BINARY, WASM_OPCODE_I64_SREM, WASM_TYPE_I64
i64.rem_u, WASM_OP_BINARY, WASM_OPCODE_I64_UREM, WASM_TYPE_I64
i64.shl, WASM_OP_BINARY, WASM_OPCODE_I64_SHL, WASM_TYPE_I64
i64.shr_s, WASM_OP_BINARY, WASM_OPCODE_I64_SAR, WASM_TYPE_I64
i64.shr_u, WASM_OP_BINARY, WASM_OPCODE_I64_SHR, WASM_TYPE_I64
i64.store, WASM_OP_STORE, WASM_OPCODE_I64_STORE_I32, WASM_TYPE_I64, WASM_MEM_TYPE_I64, 7
i64.sub, WASM_OP_BINARY, WASM_OPCODE_I64_SUB, WASM_TYPE_I64
i64.switch, WASM_OP_SWITCH, WASM_OPCODE_INVALID, WASM_TYPE_I64
i64.trunc_s/f32, WASM_OP_CONVERT, WASM_OPCODE_I64_SCONVERT_F32, WASM_TYPE_I64, WASM_TYPE_F32
i64.trunc_s/f64, WASM_OP_CONVERT, WASM_OPCODE_I64_SCONVERT_F64, WASM_TYPE_I64, WASM_TYPE_F64
i64.trunc_u/f32, WASM_OP_CONVERT, WASM_OPCODE_I64_UCONVERT_F32, WASM_TYPE_I64, WASM_TYPE_F32
i64.trunc_u/f64, WASM_OP_CONVERT, WASM_OPCODE_I64_UCONVERT_F64, WASM_TYPE_I64, WASM_TYPE_F64
i64.xor, WASM_OP_BINARY, WASM_OPCODE_I64_XOR, WASM_TYPE_I64
if, WASM_OP_IF, WASM_OPCODE_IF
import, WASM_OP_IMPORT
invoke, WASM_OP_INVOKE
label, WASM_OP_LABEL, WASM_OPCODE_INVALID
load_global, WASM_OP_LOAD_GLOBAL, WASM_OPCODE_GET_GLOBAL
local, WASM_OP_LOCAL
loop, WASM_OP_LOOP, WASM_OPCODE_LOOP
memory, WASM_OP_MEMORY
module, WASM_OP_MODULE
nop, WASM_OP_NOP, WASM_OPCODE_NOP, WASM_TYPE_VOID
param, WASM_OP_PARAM
result, WASM_OP_RESULT
return, WASM_OP_RETURN, WASM_OPCODE_RETURN
set_local, WASM_OP_SET_LOCAL, WASM_OPCODE_SET_LOCAL
store_global, WASM_OP_STORE_GLOBAL, WASM_OPCODE_SET_GLOBAL
table, WASM_OP_TABLE
